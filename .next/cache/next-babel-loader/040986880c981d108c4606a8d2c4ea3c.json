{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useRef, useEffect } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nexport function usePrevious(value) {\n  var ref = useRef();\n  useEffect(function () {\n    return void (ref.current = value);\n  }, [value]);\n  return ref.current;\n}\nexport function useMeasure() {\n  var ref = useRef();\n\n  var _useState = useState({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0\n  }),\n      bounds = _useState[0],\n      set = _useState[1];\n\n  var _useState2 = useState(function () {\n    return new ResizeObserver(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          entry = _ref2[0];\n\n      return set(entry.contentRect);\n    });\n  }),\n      ro = _useState2[0];\n\n  useEffect(function () {\n    if (ref.current) ro.observe(ref.current);\n    return function () {\n      return ro.disconnect();\n    };\n  }, []);\n  return [{\n    ref: ref\n  }, bounds];\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/pickbazar/packages/shop/helper/hooks.tsx"],"names":["useState","useRef","useEffect","ResizeObserver","usePrevious","value","ref","current","useMeasure","left","top","width","height","bounds","set","entry","contentRect","ro","observe","disconnect"],"mappings":";AAAA,SAAgBA,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACjC,MAAMC,GAAG,GAAGL,MAAM,EAAlB;AACAC,EAAAA,SAAS,CAAC;AAAA,WAAM,MAAMI,GAAG,CAACC,OAAJ,GAAcF,KAApB,CAAN;AAAA,GAAD,EAAmC,CAACA,KAAD,CAAnC,CAAT;AACA,SAAOC,GAAG,CAACC,OAAX;AACD;AAED,OAAO,SAASC,UAAT,GAAsB;AAC3B,MAAMF,GAAG,GAAGL,MAAM,EAAlB;;AAD2B,kBAELD,QAAQ,CAAM;AAAES,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,GAAG,EAAE,CAAhB;AAAmBC,IAAAA,KAAK,EAAE,CAA1B;AAA6BC,IAAAA,MAAM,EAAE;AAArC,GAAN,CAFH;AAAA,MAEpBC,MAFoB;AAAA,MAEZC,GAFY;;AAAA,mBAGdd,QAAQ,CACnB;AAAA,WAAM,IAAIG,cAAJ,CAAmB;AAAA;AAAA,UAAEY,KAAF;;AAAA,aAAaD,GAAG,CAACC,KAAK,CAACC,WAAP,CAAhB;AAAA,KAAnB,CAAN;AAAA,GADmB,CAHM;AAAA,MAGpBC,EAHoB;;AAM3Bf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAII,GAAG,CAACC,OAAR,EAAiBU,EAAE,CAACC,OAAH,CAAWZ,GAAG,CAACC,OAAf;AACjB,WAAO;AAAA,aAAMU,EAAE,CAACE,UAAH,EAAN;AAAA,KAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAIA,SAAO,CAAC;AAAEb,IAAAA,GAAG,EAAHA;AAAF,GAAD,EAAUO,MAAV,CAAP;AACD","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\n\r\nexport function usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => void (ref.current = value), [value]);\r\n  return ref.current;\r\n}\r\n\r\nexport function useMeasure() {\r\n  const ref = useRef();\r\n  const [bounds, set] = useState<any>({ left: 0, top: 0, width: 0, height: 0 });\r\n  const [ro] = useState(\r\n    () => new ResizeObserver(([entry]) => set(entry.contentRect))\r\n  );\r\n  useEffect(() => {\r\n    if (ref.current) ro.observe(ref.current);\r\n    return () => ro.disconnect();\r\n  }, []);\r\n  return [{ ref }, bounds];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}