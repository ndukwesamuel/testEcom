{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\pickbazar\\\\packages\\\\shop\\\\containers\\\\Cart\\\\CartPopUp.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  .cartPopup{\\n    top: auto !important;\\n    left: auto !important;\\n    bottom: 50px !important;\\n    right: 50px !important;\\n    box-shadow: 0 21px 36px rgba(0, 0, 0, 0.16);\\n    transform-origin: bottom right;\\n\\n    @media (max-width: 767px) {\\n      max-width: none!important;\\n      width: 100% !important;\\n      bottom: 0 !important;\\n      left: 0!important;\\n      background: #fff;\\n      overflow: initial !important;\\n      transform-origin: bottom center;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport CartItem from './Cart';\nimport CartPopupButton, { BoxedCartButton } from 'components/CartPopup/CartPopupButton';\nimport { CURRENCY } from 'helper/constant';\nimport { CartSlidePopup } from './CartItemCard.style';\nimport { FormattedMessage } from 'react-intl';\nimport { useCart } from 'contexts/cart/use-cart';\nvar CartPopupStyle = createGlobalStyle(_templateObject());\n\nvar CartPopUp = function CartPopUp(_ref) {\n  var _ref$deviceType = _ref.deviceType,\n      mobile = _ref$deviceType.mobile,\n      tablet = _ref$deviceType.tablet,\n      desktop = _ref$deviceType.desktop;\n\n  var _useCart = useCart(),\n      isOpen = _useCart.isOpen,\n      cartItemsCount = _useCart.cartItemsCount,\n      toggleCart = _useCart.toggleCart,\n      calculatePrice = _useCart.calculatePrice;\n\n  var handleModal = function handleModal() {\n    openModal({\n      show: true,\n      config: {\n        className: 'cartPopup',\n        width: 'auto',\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        transition: {\n          tension: 360,\n          friction: 40\n        }\n      },\n      closeOnClickOutside: true,\n      component: CartItem,\n      closeComponent: function closeComponent() {\n        return __jsx(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }\n        });\n      },\n      componentProps: {\n        onCloseBtnClick: closeModal,\n        scrollbarHeight: 370\n      }\n    });\n  };\n\n  var cartSliderClass = isOpen === true ? 'cartPopupFixed' : '';\n  return __jsx(React.Fragment, null, mobile || tablet ? __jsx(React.Fragment, null, __jsx(CartPopupStyle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), __jsx(CartPopupButton, {\n    className: \"product-cart\",\n    itemCount: cartItemsCount,\n    itemPostfix: cartItemsCount > 1 ? __jsx(FormattedMessage, {\n      id: \"cartItems\",\n      defaultMessage: \"items\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }) : __jsx(FormattedMessage, {\n      id: \"cartItem\",\n      defaultMessage: \"item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }),\n    price: calculatePrice(),\n    pricePrefix: \"$\",\n    onClick: handleModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })) : __jsx(React.Fragment, null, __jsx(CartSlidePopup, {\n    className: cartSliderClass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, isOpen && __jsx(CartItem, {\n    onCloseBtnClick: toggleCart,\n    scrollbarHeight: \"100vh\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  })), __jsx(BoxedCartButton, {\n    className: \"product-cart\",\n    itemCount: cartItemsCount,\n    itemPostfix: cartItemsCount > 1 ? __jsx(FormattedMessage, {\n      id: \"cartItems\",\n      defaultMessage: \"items\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }) : __jsx(FormattedMessage, {\n      id: \"cartItem\",\n      defaultMessage: \"item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }),\n    price: calculatePrice(),\n    pricePrefix: CURRENCY,\n    onClick: toggleCart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default CartPopUp;","map":{"version":3,"sources":["C:/Users/USER/Desktop/pickbazar/packages/shop/containers/Cart/CartPopUp.tsx"],"names":["React","createGlobalStyle","openModal","closeModal","CartItem","CartPopupButton","BoxedCartButton","CURRENCY","CartSlidePopup","FormattedMessage","useCart","CartPopupStyle","CartPopUp","deviceType","mobile","tablet","desktop","isOpen","cartItemsCount","toggleCart","calculatePrice","handleModal","show","config","className","width","height","enableResizing","disableDragging","transition","tension","friction","closeOnClickOutside","component","closeComponent","componentProps","onCloseBtnClick","scrollbarHeight","cartSliderClass"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { openModal, closeModal } from '@redq/reuse-modal';\r\nimport CartItem from './Cart';\r\nimport CartPopupButton, {\r\n  BoxedCartButton,\r\n} from 'components/CartPopup/CartPopupButton';\r\nimport { CURRENCY } from 'helper/constant';\r\nimport { CartSlidePopup } from './CartItemCard.style';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { useCart } from 'contexts/cart/use-cart';\r\n\r\nconst CartPopupStyle = createGlobalStyle`\r\n  .cartPopup{\r\n    top: auto !important;\r\n    left: auto !important;\r\n    bottom: 50px !important;\r\n    right: 50px !important;\r\n    box-shadow: 0 21px 36px rgba(0, 0, 0, 0.16);\r\n    transform-origin: bottom right;\r\n\r\n    @media (max-width: 767px) {\r\n      max-width: none!important;\r\n      width: 100% !important;\r\n      bottom: 0 !important;\r\n      left: 0!important;\r\n      background: #fff;\r\n      overflow: initial !important;\r\n      transform-origin: bottom center;\r\n    }\r\n  }\r\n`;\r\n\r\ntype CartProps = {\r\n  deviceType: {\r\n    mobile: boolean;\r\n    tablet: boolean;\r\n    desktop: boolean;\r\n  };\r\n};\r\n\r\nconst CartPopUp: React.FC<CartProps> = ({\r\n  deviceType: { mobile, tablet, desktop },\r\n}) => {\r\n  const { isOpen, cartItemsCount, toggleCart, calculatePrice } = useCart();\r\n\r\n  const handleModal = () => {\r\n    openModal({\r\n      show: true,\r\n      config: {\r\n        className: 'cartPopup',\r\n        width: 'auto',\r\n        height: 'auto',\r\n        enableResizing: false,\r\n        disableDragging: true,\r\n        transition: {\r\n          tension: 360,\r\n          friction: 40,\r\n        },\r\n      },\r\n      closeOnClickOutside: true,\r\n      component: CartItem,\r\n      closeComponent: () => <div />,\r\n      componentProps: { onCloseBtnClick: closeModal, scrollbarHeight: 370 },\r\n    });\r\n  };\r\n\r\n  let cartSliderClass = isOpen === true ? 'cartPopupFixed' : '';\r\n\r\n  return (\r\n    <>\r\n      {mobile || tablet ? (\r\n        <>\r\n          <CartPopupStyle />\r\n          <CartPopupButton\r\n            className='product-cart'\r\n            itemCount={cartItemsCount}\r\n            itemPostfix={\r\n              cartItemsCount > 1 ? (\r\n                <FormattedMessage id='cartItems' defaultMessage='items' />\r\n              ) : (\r\n                <FormattedMessage id='cartItem' defaultMessage='item' />\r\n              )\r\n            }\r\n            price={calculatePrice()}\r\n            pricePrefix='$'\r\n            onClick={handleModal}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <CartSlidePopup className={cartSliderClass}>\r\n            {isOpen && (\r\n              <CartItem onCloseBtnClick={toggleCart} scrollbarHeight='100vh' />\r\n            )}\r\n          </CartSlidePopup>\r\n\r\n          <BoxedCartButton\r\n            className='product-cart'\r\n            itemCount={cartItemsCount}\r\n            itemPostfix={\r\n              cartItemsCount > 1 ? (\r\n                <FormattedMessage id='cartItems' defaultMessage='items' />\r\n              ) : (\r\n                <FormattedMessage id='cartItem' defaultMessage='item' />\r\n              )\r\n            }\r\n            price={calculatePrice()}\r\n            pricePrefix={CURRENCY}\r\n            onClick={toggleCart}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartPopUp;\r\n"]},"metadata":{},"sourceType":"module"}